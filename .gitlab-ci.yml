include:
  - project: 'dependabot-gitlab/dependabot-standalone'
    file: '.gitlab-ci.yml'

stages:
  - dependabot
  - build

variables:
  DOCKER_BUILDKIT: 1

build_amd64_alpine_php-7.3:
  extends: .build_amd64_template
  variables:
    DOCKER_FILE: php-7.3/Dockerfile-alpine
    IMAGE_TAG: $DOCKER_USERNAME/php-fpm-composer:7.4-alpine

build_amd64_alpine_php-7.3_xdebug:
  extends: .build_amd64_template
  variables:
    DOCKER_FILE: php-7.3/Dockerfile-alpine-xdebug
    IMAGE_TAG: $DOCKER_USERNAME/php-fpm-composer:7.4-alpine-xdebug

build_amd64_alpine_php-7.4:
  extends: .build_amd64_template
  variables:
    DOCKER_FILE: php-7.4/Dockerfile-alpine
    IMAGE_TAG: $DOCKER_USERNAME/php-fpm-composer:7.4-alpine

build_amd64_alpine_php-7.4_xdebug:
  extends: .build_amd64_template
  variables:
    DOCKER_FILE: php-7.4/Dockerfile-alpine-xdebug
    IMAGE_TAG: $DOCKER_USERNAME/php-fpm-composer:7.4-alpine-xdebug


build_amd64_alpine_php-8.0:
  extends: .build_amd64_template
  variables:
    DOCKER_FILE: php-8.0/Dockerfile-alpine
    IMAGE_TAG: $DOCKER_USERNAME/php-fpm-composer:8.0-alpine

build_amd64_alpine_php-8.0_xdebug:
  extends: .build_amd64_template
  variables:
    DOCKER_FILE: php-8.0/Dockerfile-alpine-xdebug
    IMAGE_TAG: $DOCKER_USERNAME/php-fpm-composer:8.0-alpine-xdebug


.dependabot-gitlab:
  stage: dependabot

.build_amd64_template:
  stage: build
  image: docker:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_OPEN_MERGE_REQUESTS'
      when: never
  variables:
    BUILDX_VERSION: v0.8.2
    PLATFORM: linux/arm/v7,linux/arm64/v8,linux/386,linux/amd64
  services:
   - name: docker:dind
     command: ["--experimental"]
  before_script:
    - apk add curl
    - mkdir -vp ~/.docker/cli-plugins/
    - curl --silent -L "https://github.com/docker/buildx/releases/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.linux-amd64" > ~/.docker/cli-plugins/docker-buildx
    - chmod a+x ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
    - docker buildx inspect --bootstrap
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker buildx build --cache-from type=registry,ref=$CI_REGISTRY_IMAGE:cache --cache-to type=registry,ref=$CI_REGISTRY_IMAGE:cache --push --platform $PLATFORM -f $DOCKER_FILE --tag $IMAGE_TAG .
